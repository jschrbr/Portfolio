{"version":3,"sources":["logo.svg","assets/footer/footer.js","assets/mini-drawer/drawer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","footer","padding","backgroundColor","palette","type","grey","Copyright","Typography","variant","color","Link","href","Date","getFullYear","useStyles","root2","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","landColor","background","primary","light","maxHeight","fixedHeight","imgBox","margin","backgroundSize","style","borderColor","bigAvatar","maxWidth","border","borderStyle","borderWidth","boxShadow","shadows","Dashboard","classes","React","useState","open","setOpen","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Drawer","Divider","Container","Paper","Grid","direction","justify","Avatar","alt","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aec84c16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\"\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  }\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n      >\n        <Avatar\n          alt=\"Remy Sharp\"\n          src=\"http://lorempixel.com/400/400/cats/\"\n          className={classes.bigAvatar}\n        />\n      </Grid>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">\n            My sticky footer can be found here.\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport StickyFooter from \"../footer/footer\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// import { mainListItems, secondaryListItems } from \"./listItems\";\n// import Chart from \"./Chart\";\n// import Deposits from \"./Deposits\";\n// import Orders from \"./Orders\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  root2: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\"\n  },\n\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  landColor: {\n    background: theme.palette.primary.light,\n    height: \"100%\",\n    maxHeight: 400\n  },\n  fixedHeight: {\n    height: 240\n  },\n  imgBox: {\n    margin: 30,\n    backgroundSize: \"cover\",\n    overflow: \"hidden\",\n    style: { width: \"5rem\", height: \"5rem\" },\n    borderColor: theme.palette.background.paper\n  },\n\n  bigAvatar: {\n    marginTop: \"10%\",\n    width: \"80%\",\n    height: \"80%\",\n    maxWidth: 400,\n    border: 10,\n    borderStyle: \"solid\",\n    borderWidth: 5,\n    borderColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[20]\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            James Schreiber\n          </Typography>\n          <IconButton color=\"inherit\">\n            <GitHubIcon />\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <LinkedInIcon />\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <EmailIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{mainListItems}</List> */}\n        <Divider />\n        {/* <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* <Grid container spacing={3}> */}\n          {/* Chart */}\n          {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n          {/* Recent Deposits */}\n          {/* <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid> */}\n          {/* Recent Orders */}\n          {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid> */}\n          {/* <Box pt={4}>\n            <Copyright />\n          </Box> */}\n          <div className={classes.root2}>\n            <Paper className={classes.landColor}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n              >\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  src=\"http://lorempixel.com/400/400/cats/\"\n                  className={classes.bigAvatar}\n                />\n              </Grid>\n            </Paper>\n            <footer className={classes.footer}>\n              <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\">\n                  My sticky footer can be found here.\n                </Typography>\n                <Copyright />\n              </Container>\n            </footer>\n          </div>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./assets/mini-drawer/drawer\";\n\nfunction App() {\n  return <Dashboard />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Dashboard from \"./assets/mini-drawer/drawer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}